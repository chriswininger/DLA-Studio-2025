(function(){"use strict";function f(e){const{width:t,height:s,cluster:r}=e,a={},u=[];for(const d of e.walkers){const y=Math.floor(Math.random()*4);let{x:n,y:l}=d;y===0?n++:y===1?n--:y===2?l++:l--,n=Math.max(0,Math.min(t-1,n)),l=Math.max(0,Math.min(s-1,l));const o={x:n,y:l},h=x(o).find(i=>!!r[c(i)]);if(h){const i=r[c(h)];a[c(o)]=w(o,i,i.distance+1)}else u.push(o)}return{...e,cluster:{...e.cluster,...a},walkers:u,steps:e.steps+1}}function x(e){return[{x:e.x+1,y:e.y},{x:e.x-1,y:e.y},{x:e.x,y:e.y+1},{x:e.x,y:e.y-1},{x:e.x+1,y:e.y+1},{x:e.x-1,y:e.y-1},{x:e.x-1,y:e.y+1},{x:e.x+1,y:e.y-1}]}function w(e,t,s=0){return{point:e,parent:t,distance:s}}function c(e){return`${e.x},${e.y}`}self.onmessage=function(e){try{const t=e.data;if(t.type==="simulate"){let s={width:t.width,height:t.height,cluster:t.dlaState.cluster,walkers:t.dlaState.walkers,steps:t.dlaState.steps},r=s.steps;const a=t.progressInterval||1e3;for(;s.walkers.length>0;)s=f(s),r++,r%a===0&&self.postMessage({type:"progress",steps:r,walkers:s.walkers.length,walkerPositions:s.walkers});self.postMessage({type:"done",steps:r,cluster:s.cluster})}}catch(t){self.postMessage({type:"error",error:t.message})}}})();
